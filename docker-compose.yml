version: "3.9"

services:
  ###################################################################
  # TRAEFIK (Reverse Proxy)
  ###################################################################
  reverse-proxy:
    image: traefik:v2.11
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard: http://localhost:8080
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - my_network
    labels:
      - "traefik.enable=true"
      # Le dashboard sera sur http://localhost:8080, sans label supplémentaire

  ###################################################################
  # SITE STATIQUE (Nginx) sur "/"
  ###################################################################
  static_server:
    build:
      context: ./static_server
      dockerfile: Dockerfile
    expose:
      - "80"
    networks:
      - my_network
    labels:
      - "traefik.enable=true"
      # Route par défaut sur la racine
      - "traefik.http.routers.static.rule=PathPrefix(`/`)"
      - "traefik.http.routers.static.entrypoints=web"
      - "traefik.http.services.static.loadbalancer.server.port=80"
      - "traefik.http.routers.static.priority=1"

  ###################################################################
  # FRONTEND (React Dev Server) sur "/frontend"
  ###################################################################
  frontend:
    build:
      context: ./biasfinder-frontend
      dockerfile: Dockerfile
    expose:
      - "5173"
    networks:
      - my_network
    labels:
      - "traefik.enable=true"

      # On matche toutes les requêtes commençant par /frontend
      - "traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
      - "traefik.http.routers.frontend.priority=2"

      # On STRIP le préfixe "/frontend" pour que Vite reçoive tout en "/"
      - "traefik.http.middlewares.strip-frontend.stripprefix.prefixes=/frontend"
      - "traefik.http.routers.frontend.middlewares=strip-frontend"

  ###################################################################
  # API (Spring Boot + Javalin) sur "/api"
  ###################################################################
  api:
    build:
      context: ./app-dai
      dockerfile: Dockerfile
    expose:
      - "7070"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/biasbinder_db
      - SPRING_DATASOURCE_USERNAME=biasbinder_dev
      - SPRING_DATASOURCE_PASSWORD=biasbinder
    depends_on:
      - db
    networks:
      - my_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=7070"
      - "traefik.http.routers.api.priority=3"

      # Middleware CORS
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowHeaders=Content-Type,Authorization"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.api-cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.api-cors.headers.addVaryHeader=true"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.routers.api.middlewares=api-cors"

  ###################################################################
  # BASE DE DONNÉES (Postgres)
  ###################################################################
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=biasbinder_dev
      - POSTGRES_PASSWORD=biasbinder
      - POSTGRES_DB=biasbinder_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  db_data:
