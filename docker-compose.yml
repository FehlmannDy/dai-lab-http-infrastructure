version: '3.9'

name: dai-http-infrastructure

networks:
  biasbinder_network:
    driver: bridge

services:
  reverse-proxy:
    container_name: traefik
    image: traefik:v2.11
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik dashboard
    command:
      - "--api.dashboard=true"                                        # Enable Traefik dashboard
      - "--providers.docker=true"                                     # Enable Docker provider
      - "--providers.docker.exposedbydefault=false"                   # Only expose services with explicit labels
      - "--entrypoints.web.address=:80"                               # Define HTTP entrypoint
      - "--entrypoints.websecure.address=:443"                        # Define HTTPS entrypoint
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"        # Docker socket for Traefik to listen to Docker events
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"   # Traefik main configuration
      - "./traefik/tls.yml:/etc/traefik/tls.yml:ro"           # TLS certificates configuration
      - "./certificates:/etc/ssl/traefik"                     # TLS certificates
    networks:
      - biasbinder_network
    labels:
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # Middleware to redirect HTTP to HTTPS
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=http"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.traefik.me`)"
      - "traefik.http.routers.dashboard.service=dashboard@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.api.rule=Host(`traefik.traefik.me`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      # CORS Middleware Labels
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowHeaders=Content-Type,Authorization"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.api-cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.api-cors.headers.addVaryHeader=true"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowOrigin=https://frontend.traefik.me"
      # Apply Middleware to Router
      - "traefik.http.routers.api.middlewares=api-cors"

  static_server:
    restart: unless-stopped
    deploy:
      replicas: 1
    build:
      context: ./static_server
      dockerfile: Dockerfile
    volumes:
      - ./static_server/static_template:/usr/share/nginx/html:ro
      - ./static_server/nginx_config/nginx.conf:/etc/nginx/nginx.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static_server.rule=Host(`static.traefik.me`)"
      - "traefik.http.services.static_server.loadbalancer.server.port=80" # default load balancing round-robin
      - "traefik.http.routers.static_server.entrypoints=web,websecure"
      - "traefik.http.routers.static_server-secure.tls=true"
    networks:
      - biasbinder_network

  db:
    restart: unless-stopped
    build:
      #path to BDR submodule
      context: ./project-fehlmann_halimi_stelcher
      dockerfile: Dockerfile
    environment:
      - POSTGRESQL_USERNAME=biasbinder_dev
      - POSTGRESQL_PASSWORD=biasbinder
      - POSTGRESQL_DATABASE=biasbinder_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - biasbinder_network

  api:
    restart: unless-stopped
    deploy:
        replicas: 1
    build:
      context: ./app-dai
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/biasbinder_db?currentSchema=biasbinder_bst
      - SPRING_DATASOURCE_USERNAME=biasbinder_dev
      - SPRING_DATASOURCE_PASSWORD=biasbinder
    depends_on:
      - db
    networks:
      - biasbinder_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.traefik.me`)"
      - "traefik.http.services.api.loadbalancer.server.port=7070"
      # Sticky session configuration
      - "traefik.http.services.api2.loadBalancer.sticky.cookie=true"
      - "traefik.http.services.api2.loadBalancer.sticky.cookie.name=api"
      # TLS configuration
      - "traefik.http.routers.api-secure.tls=true"
      - "traefik.http.routers.api.entrypoints=web,websecure"
        # CORS Middleware Labels
      - "traefik.http.routers.api.middlewares=cors"

  frontend:
    restart: unless-stopped
    build:
      # path to the FRONT submodule
     context: ./biasfinder-frontend
     dockerfile: Dockerfile
    depends_on:
      - api
    networks:
      - biasbinder_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.traefik.me`)"
      - "traefik.http.routers.frontend.entrypoints=web,websecure"
      # TLS configuration
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"

volumes:
    db_data: